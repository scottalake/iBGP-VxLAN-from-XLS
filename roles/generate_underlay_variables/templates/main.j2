{# % set leafs = groups['leaf'] + groups['bleaf'] + groups['bgw'] %} #}
{% set leafs = groups['leaf'] %}
underlay:
  ospf:
    routerid: {{ ospf.routerid }}
    process: {{ ospf.process }}
    area: {{ ospf.area }}
    cost: {{ ospf.cost }}
  pim:
    interface: {{ pim.interface }}
    address: {{ pim.address }}
    mask: {{ pim.mask }}
    description: {{ pim.description }}
    grouplist: {{ pim.grouplist }}
{% for host in leafs %}
{% if inventory_hostname == host %}
  role: leaf
{% endif %}
{% endfor %}
{% for host in groups["spine"] %}
{% if inventory_hostname == host %}
  role: spine
{% endif %}
{% endfor %}
  loopbacks:
    - interface: Loopback0
{% for id,host in nodes.iteritems() %}
{% if inventory_hostname == host %}
      ipaddress: {{ rid[id]["ip"] }}
      mask: {{ rid[id]["mask"] }}
      description: loopback_underlay
{% endif %}
{% endfor %}
{% if inventory_hostname in leafs %}
  nve_loopbacks:
    - interface: Loopback1
{% endif %}
{% for id,host in nodes.iteritems() %}
{% if inventory_hostname == host and host in leafs %}
      ipaddress: {{ vtep[id]["ip"] }}
      mask: {{ vtep[id]["mask"] }}
      description: loopback_underlay
{% endif %}
{% endfor %}
  interfaces:
{% for key, value in topology.iteritems() %}
{% if inventory_hostname == key %}
{% for id, peers in value.iteritems() %}
    - interface: {{ peers.local_ifx }}
      description: to_{{ peers.peer.lower() }}_{{ peers.remote_ifx.lower() }}
      ipaddress: {{ p2p[peers.linkid][peers.portid]["ip"] }}
      mask: {{ p2p[peers.linkid][peers.portid]["mask"] }}
      mtu: 9216
{% endfor %}
{% endif %}
{% endfor %}
{############################################################################}
{#    Interface data structure for new nxos_interfaces module#}
{############################################################################}
  loopbacks_v2:
   - name: Loopback0
     enabled: true
     description: Underlay Loopback for BGP Neighbors
  nve_loopbacks_v2:
   - name: Loopback1
     enabled: true
     description: NVE Loopback
  interfaces_v2:
{% for key, value in topology.iteritems() %}
{%   if inventory_hostname == key %}
{%     for id, peers in value.iteritems() %}
    - name: {{ peers.local_ifx }}
      description: to_{{ peers.peer.lower() }}_{{ peers.remote_ifx.lower() }}
      enabled: true
      mtu: 9216
      mode: layer3
{%     endfor %}
{%   endif %}
{% endfor %}
{############################################################################}
{#    Interface data structure for new nxos_l3_interfaces module#}
{############################################################################}
  loopbacks_l3_v2:
   - name: Loopback0
     ipv4:
{############################################################################}
{#    
Side note re dictionary looping in jinja2 vs. ansible.
Ansible has lots of tweaks to access nested information (with_dict, with_subelements).
With jinja2, you have to manually configure nested loops to access nested data.
One question we haven't answered is how to access nested lists in dictionaries.
#}
{############################################################################}

{% for id,host in nodes.iteritems() %}
{%   if inventory_hostname == host %}
       - address: {{ rid[id]["ip"] }}/{{ rid[id]["mask"] }}
         tag: "{{ overlay['bgpparameters']['asn'] }}"
{%   endif %}
{% endfor %}
{############################################################################}
{#    
Are we accessing nested list data above?  No. Here is the structure
rid:
  0: { "ip": 88.88.88.0, "mask": 32 }
  1: { "ip": 88.88.88.1, "mask": 32 }
  2: { "ip": 88.88.88.2, "mask": 32 }
  3: { "ip": 88.88.88.3, "mask": 32 }
  4: { "ip": 88.88.88.4, "mask": 32 }
  5: { "ip": 88.88.88.5, "mask": 32 }
This is the same as 
rid:
  0:
    ip: 88.88.88.0
    mask: 32
  1:
    ip: 88.88.88.1
    mask: 32
etc.

#}
{############################################################################}
{% if inventory_hostname in leafs %}
  nve_loopbacks_l3_v2:
    - name: Loopback1
{% endif %}
{% for id,host in nodes.iteritems() %}
{%   if inventory_hostname == host and host in leafs %}
      ipv4:
        - address: {{ vtep[id]["ip"] }}/{{ vtep[id]["mask"] }}
          tag: "{{ overlay['bgpparameters']['asn'] }}"
{%   endif %}
{% endfor %}
  interfaces_l3_v2:
{% for key, value in topology.iteritems() %}
{%   if inventory_hostname == key %}
{%     for id, peers in value.iteritems() %}
    - name: {{ peers.local_ifx }}
      ipv4:
        - address: {{ p2p[peers.linkid][peers.portid]["ip"] }}/{{ p2p[peers.linkid][peers.portid]["mask"] }}
{%     endfor %}
{%   endif %}
{% endfor %}
{############################################################################}
{#    Enable and bring up pim loopbacks
{############################################################################}
  pim_v2:
    - name: {{ pim.interface }}
      description: {{ pim.description }}
      enabled: true
  pim_l3_v2:
    - name: {{ pim.interface }}
      ipv4:
        - address: {{ pim.address }}/{{ pim.mask }}
