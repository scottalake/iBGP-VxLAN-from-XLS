---

- name: Configure VPC
  hosts: [leaf]
  connection: local
  gather_facts: no
  roles:
    - common
    #- configure_loopbacks
  vars:
    playbook_name: "Configure vPC"
  tasks:
    - name: Create checkpoint
      nxos_rollback:
        checkpoint_file: checkpoint.cfg
      tags:
        - create_checkpoint
    - block:
      - name: Install feature VPC
        nxos_feature:
          feature: vpc
          state: enabled
        when: vpc.domain is defined
        ignore_errors: True
        tags:
          - install_feature_vpc
          - feature

#########################################################################

      - name: Create the vpc keepalive VRF
        nxos_vrf:
          name: "{{ vpc.vrf }}"
          admin_state: up
          state: present
        when: vpc.domain is defined
        tags:
          - create_vrf_vpc_pl
          - vrf

#########################################################################

      - name: Configure VPC
        nxos_vpc:
          domain: "{{ vpc.domain }}"
          role_priority: "{{ vpc.priority }}"
          system_priority: "{{ vpc.system_priority }}"
          pkl_vrf: "{{ vpc.vrf }}"
          pkl_dest: "{{ vpc.vpc_dst }}"
          pkl_src: "{{ vpc.vpc_src }}"
          peer_gw: "{{ vpc.peer_gw }}"
          delay_restore: "{{ vpc.delay_restore }}"
          auto_recovery: "{{ vpc.auto_recovery }}"
          state: present
        when: vpc.domain is defined
        ignore_errors: True
        tags:
          - configure_vpc
          - vpc


#########################################################################

      - name: Configure VPC extra parameters
        nxos_config:
          lines:
            - ip arp synchronize
            - ipv6 nd synchronize
            - layer3 peer-router
            - peer-gateway
            - peer-switch
          parents: vpc domain {{ vpc.domain }}
        when: vpc.domain is defined
        ignore_errors: True
        tags:
          - configure_vpc
          - vpc

      - name: Bring up vPC Peer Link Interfaces
        nxos_interfaces:
          config: "{{ vpc['vpc_interfaces'] }}" 
          state: replaced
        tags:
        - loopbacks

      # - name: Set base interface configuration for loopbacks
      #   nxos_interfaces:
      #     config: "{{ underlay['loopbacks_v2'] }}" 
      #     state: replaced
      #   tags:
      #   - loopbacks

      - debug: var=vpc.vpc_lag_interfaces

      #  We need to find out the right order in which to apply these configs.
      #  Just now, we dropped the playbook but the interfaces weren't added
      #  to the port channel until the playbook was run a 2nd time.

      - name: Add vpc portchannel interface with nxos_lag_interfaces module
        nxos_lag_interfaces:
          config: "{{ vpc['vpc_lag_interfaces'] }}" 
          state: merged

      - name: Enable vpc port channel interface with nxos_interfaces module
        nxos_interfaces:
          config:
            - name: "port-channel{{ vpc.po_id }}"
              description: 'vPC_peer_link_to_{{ vpc.vpc_peer }}'
              mode: layer2
              enabled: True
          state: merged

      - name: Configure trunking on portchannel interface with nxos_l2_interfaces module
        nxos_l2_interfaces:
          config:
            - name: "port-channel{{ vpc.po_id }}"
              # access:
              #   vlan: 4
              trunk:
                native_vlan: 10
                allowed_vlans: 2,4,15
              # trunk:
              #   native_vlan: 2
              #   allowed_vlans: '1-4094'
          state: merged

      - name: Configure peer link on VPC interface with nxos_vpc_interface module
        nxos_vpc_interface:
          portchannel: "{{ vpc.po_id }}"
          peer_link: yes
          state: present
        # when: vpc.domain is defined
        # ignore_errors: True
        # tags:
        #   - configure_vpc_po
        #   - vpc_po


###########################################################################
#   Cannot access these vars direct from the topo file
#   Need to transfer them from the topo file to the individual
#   host_vars files.
###########################################################################

      - name: Configure KAL Link between vPC Members
        nxos_interfaces:
          config:
            - name: "{{ kal_links.inventory_hostname[0] }}" 
              description: 'vPC_keepalive_link_to_{{ vpc.vpc_peer }} {{ kal_links.inventory_hostname[0] }}'
              enabled: True
          state: merged

###########################################################################
#   This is about kpl vlan which we're not using
#   This is about kpl vlan which we're not using
#   This is about kpl vlan which we're not using
###########################################################################
      # - name: Create L2 VLAN VPC Underlay
      #   nxos_vlan:
      #     vlan_id: "{{ vpc.vlan }}"
      #     admin_state: up
      #     name: vpc_undelay
      #     provider: "{{ nxapi }}"
      #   when: vpc.domain is defined
      #   ignore_errors: True
      #   tags:
      #     - configure_l2_vpc_underlay_vlan
      #     - vpc_underlay_vlan

      # - name: Merge provided configuration with device configuration.
      #   nxos_vlans:
      #     config:
      #       - vlan_id: 5
      #         name: test-vlan5
      #       - vlan_id: 10
      #         enabled: False
      #     state: merged


###########################################################################
#   Need to pull the kal interface info from vpc variables and configure
#   the link here.
# What looks to be happening here is that the original programmer is 
# using the kal synatax to add a L3 link between the vpc peers.  
# Confirm.
###########################################################################

#This is a test addition to this file. 



#       - name: Create L3 VLAN VPC PL
#         nxos_interface:
#           name: "Vlan{{ vpc.vlan }}"
#           admin_state: up
#           state: present
#           provider: "{{ nxapi }}"
#         when: vpc.domain is defined
#         ignore_errors: True
#         tags:
#           - configure_l3_vpc_underlay_vlan
#           - vpc_underlay_vlan

#       - name: Configure L3 VLAN VPC Underlay IPv4
#         nxos_ip_interface:
#           interface: "Vlan{{ vpc.vlan }}"
#           version: v4
#           addr: "{{ vpc.vlan_underlay_ipv4 }}"
#           mask: "{{ vpc.vlan_underlay_mask }}"
#           state: present
#           provider: "{{ nxapi }}"
#         when: vpc.domain is defined
#         ignore_errors: True
#         tags:
#           - configure_l3_vpc_underlay_vlan
#           - vpc_underlay_vlan

#       - name: Configure L3 VLAN VPC Underlay PIM
#         nxos_pim_interface:
#           interface: "Vlan{{ vpc.vlan }}"
#           sparse: true
#           state: present
#           provider: "{{ nxapi }}"
#         when: vpc.domain is defined
#         ignore_errors: True
#         tags:
#           - configure_pim_vpc_underlay_vlan
#           - vpc_underlay_vlan

#       - name: Confgure OSPF VLAN VPC Underlay
#         nxos_interface_ospf:
#           interface: "Vlan{{ vpc.vlan }}"
#           ospf: "{{ underlay['ospf']['process'] }}"
#           area: "{{ underlay['ospf']['area'] }}"
#           cost: default
#           passive_interface: false
#           state: present
#           provider: "{{ nxapi }}"
#         when: vpc.domain is defined
#         ignore_errors: True
#         tags:
#           - configure_ospf_vpc_underlay_vlan
#           - vpc_underlay_vlan

#       - name: Confgure OSPF VLAN Underlay network type
#         nxos_config:
#           lines:
#             - ip ospf network point-to-point
#           parents: "interface Vlan{{ vpc.vlan }}"
#           provider: "{{ nxapi }}"
#         when: vpc.domain is defined
#         ignore_errors: True
#         tags:
#           - configure_ospf_vpc_underlay_vlan
#           - vpc_underlay_vlan
#       rescue:
#         - set_fact:
#             trigger_msg: True
#             send_msg: "{{ playbook_name }} -  error configure on {{ inventory_hostname }}"
#           changed_when: True
#           notify: notify using spark
#         - name: Rollback to checkpoint
#           nxos_rollback:
#             rollback_to: checkpoint.cfg
#             provider: "{{ nxapi }}"
# ...

   
#     - name: show feature
#       nxos_command:
#         commands:
#           - show vpc
#       register: vpc
#     - name: show feature
#       debug: msg="{{vpc.stdout[0]}}"





...


